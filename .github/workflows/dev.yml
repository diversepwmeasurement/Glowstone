jobs:
  build:
    name: Dev Build (Java ${{ matrix.java }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: gradle/wrapper-validation-action@v1
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Cache gradle
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties',
          'gradle/libs.versions.toml') }}
        path: '~/.gradle/caches

          ~/.gradle/jdks

          ~/.gradle/native

          ~/.gradle/wrapper

          '
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_glowstonePassword: ${{ secrets.MAVEN_PASSWORD }}
        ORG_GRADLE_PROJECT_glowstoneUsername: ${{ secrets.MAVEN_USERNAME }}
      name: Gradle Build and Deploy
      run: BUILD_EXTRAS=true ./gradlew assemble publish --no-daemon --stacktrace
    - continue-on-error: true
      id: version
      name: Get Minecraft version
      run: 'minecraft_version=$(./gradlew -q printMinecraftVersion)

        echo "::set-output name=minecraft_version::$minecraft_version"

        '
    - continue-on-error: true
      name: Cleanup Gradle Cache
      run: 'rm -f ~/.gradle/caches/modules-2/modules-2.lock

        rm -f ~/.gradle/caches/modules-2/gc.properties

        '
    - continue-on-error: true
      env:
        API_TOKEN_GITHUB: ${{ secrets.GH_TOKEN }}
      name: Push Javadocs to Pages
      uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
      with:
        commit_message: Update Javadocs for Glowstone commit ${{ github.sha }}
        destination_folder: content/jd/glowstone/${{ steps.version.outputs.minecraft_version
          }}/
        destination_repo: GlowstoneMC/glowstonemc.github.io
        source_file: build/docs/javadoc/.
        user_email: mastercoms@tuta.io
        user_name: mastercoms
    - continue-on-error: true
      name: GitHub Artifact
      uses: actions/upload-artifact@v3
      with:
        name: glowstone
        path: build/libs/glowstone.jar
    - continue-on-error: true
      env:
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      if: ${{ github.ref == 'refs/heads/1.12' }}
      name: Setup SSH
      run: "mkdir -p ~/.ssh\ncat << EOF > ~/.ssh/config\nHost *\n  ControlMaster auto\n\
        \  ControlPath ~/.ssh/-%r@%h:%p\n  ControlPersist 120\nEOF\necho $SSH_KNOWN_HOSTS\
        \ >> ~/.ssh/known_hosts\nsudo apt-get install sshpass\n"
    - continue-on-error: true
      env:
        SSHPASS: ${{ secrets.SSH_PASSWORD }}
        SSH_ADDRESS: ${{ secrets.SSH_ADDRESS }}
      if: ${{ github.ref == 'refs/heads/1.12' }}
      name: Deploy to Test Server
      run: 'sshpass -e scp target/glowstone.jar glowstone@$SSH_ADDRESS:

        sshpass -e ssh glowstone@$SSH_ADDRESS sudo systemctl restart glowstone

        '
    strategy:
      matrix:
        java:
        - 17
name: Dev Build
on:
  repository_dispatch:
    types: trigger-ga___dev.yml
